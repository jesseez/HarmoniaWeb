{"version":3,"sources":["modules/notePlayerPool.js","modules/utils.js","modules/audioPlayer.js","modules/orderedSongPlayer.js","modules/songPlayer.js","modules/note.js","components/PlaySong.js","App.js","serviceWorker.js","index.js"],"names":["AudioContext","window","webkitAudioContext","NotePlayerPool","this","notePlayerConnectionPool","filterNode","audioContext","createDynamicsCompressor","connect","destination","notePlayerConnection","find","o","available","NotePlayerConnection","_createNotePlayer","notePlayer","oscillator","createOscillator","gainNode","createGain","NotePlayer","connection","frequency","value","gain","setValueAtTime","getCurrentTime","start","exponentialRampToValueAtTime","time","linearRampToValueAtTime","stop","setTargetAtTime","callback","onended","currentTime","calculateNoteLengthInSeconds","note","tempo","calculateLengthInSeconds","noteLength","AudioPlayer","notePlayerPool","_notePlayersInUse","onNoteEnd","getNotePlayer","push","setFrequency","getFrequency","timeInSeconds","onEnded","_freeNotePlayer","bind","returnNotePlayer","splice","indexOf","forEach","audioPlayer","song","_scheduledEvents","state","OrderedSongPlayer","ready","_startTime","_startLocation","playing","ended","reset","isPlaying","currentTempo","pause","play","isEnded","length","Date","now","timeElapsedInMillis","noteLengthInMillis","noteValue","setTimeout","_playNote","_onNoteEnd","paused","endTime","e","clearTimeout","SongPlayer","_currentIndex","_convertSongIntoMap","structuredSong","noteGroup","n","startTime","NoteGroup","notes","sort","a","b","isReady","isPaused","playImpl","noteLengthUntilNextNote","reduce","Math","max","Note","_baseFrequency","pow","_frequencyStep","_baseNoteValue","PlaySong","songPlayer","mySong1","mySong","map","setSong","setTempo","Button","onClick","startAudio","stopAudio","React","Component","App","basename","className","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3c984804.chunk.js","sourcesContent":["\r\nconst AudioContext = window.AudioContext || window.webkitAudioContext;\r\n\r\nexport default class NotePlayerPool {\r\n  static audioContext = new AudioContext();\r\n\r\n  constructor() {\r\n    this.notePlayerConnectionPool = [];\r\n    this.filterNode = NotePlayerPool.audioContext.createDynamicsCompressor();\r\n    this.filterNode.connect(NotePlayerPool.audioContext.destination);\r\n  }\r\n\r\n  getNotePlayer() {\r\n    let notePlayerConnection = this.notePlayerConnectionPool.find((o) => o.available);\r\n    if (notePlayerConnection == null) {\r\n      notePlayerConnection = new NotePlayerConnection(this._createNotePlayer());\r\n    }\r\n    notePlayerConnection.available = false;\r\n\r\n    return notePlayerConnection.notePlayer;\r\n  }\r\n\r\n  _createNotePlayer() {\r\n    const oscillator = NotePlayerPool.audioContext.createOscillator();\r\n    const gainNode = NotePlayerPool.audioContext.createGain();\r\n    gainNode.connect(this.filterNode);\r\n    oscillator.connect(gainNode);\r\n    return new NotePlayer(oscillator, gainNode, this.filterNode, NotePlayerPool.audioContext);\r\n  }\r\n\r\n  returnNotePlayer(notePlayer) {\r\n    const connection = this.notePlayerConnectionPool.find((o) => o.notePlayer === notePlayer);\r\n\r\n    if (connection != null) connection.available = true;\r\n  }\r\n}\r\n\r\n// used to track availability/usage of notePlayers\r\nclass NotePlayerConnection {\r\n  constructor(notePlayer) {\r\n    this.notePlayer = notePlayer;\r\n    this.available = true;\r\n  }\r\n}\r\n\r\nclass NotePlayer {\r\n  constructor(oscillator, gainNode, filterNode, audioContext) {\r\n    this.oscillator = oscillator;\r\n    this.gainNode = gainNode;\r\n    this.filterNode = filterNode;\r\n    this.audioContext = audioContext;\r\n  }\r\n\r\n  setFrequency(frequency) {\r\n    this.oscillator.frequency.value = frequency;\r\n  }\r\n\r\n  start() {\r\n    this.gainNode.gain.setValueAtTime(1/1000, this.getCurrentTime());\r\n    this.oscillator.start();\r\n    this.gainNode.gain.exponentialRampToValueAtTime(0.2, this.getCurrentTime() + 0.01);\r\n  }\r\n\r\n  stop(time) {\r\n    if (!time) {\r\n      this.gainNode.gain.setTargetAtTime(1/1000, this.getCurrentTime(), 0.01);\r\n      this.oscillator.stop(this.getCurrentTime() + 0.05);\r\n    } else {\r\n      this.gainNode.gain.linearRampToValueAtTime(1/1000, time);\r\n      this.oscillator.stop(time);\r\n    }\r\n  }\r\n\r\n  onEnded(callback) {\r\n    this.oscillator.onended = callback;\r\n  }\r\n\r\n  getCurrentTime() {\r\n    return this.audioContext.currentTime;\r\n  }\r\n}\r\n","export const calculateNoteLengthInSeconds = function(note, tempo) {\r\n  return calculateLengthInSeconds(note.noteLength, tempo);\r\n};\r\n\r\nexport const calculateLengthInSeconds = function(noteLength, tempo) {\r\n  // beats per second\r\n  const bps = tempo / 60;\r\n  // seconds per beat\r\n  const spb = 1 / bps;\r\n\r\n  return spb * noteLength;\r\n};\r\n","import NotePlayerPool from \"./notePlayerPool\";\r\nimport { calculateNoteLengthInSeconds } from \"./utils\";\r\n\r\nexport default class AudioPlayer {\r\n  constructor() {\r\n    this.notePlayerPool = new NotePlayerPool();\r\n    this._notePlayersInUse = [];\r\n  }\r\n\r\n  play(note, tempo, onNoteEnd) {\r\n    const notePlayer = this.notePlayerPool.getNotePlayer();\r\n    this._notePlayersInUse.push(notePlayer);\r\n\r\n    notePlayer.setFrequency(note.getFrequency());\r\n    notePlayer.start();\r\n\r\n    const timeInSeconds = calculateNoteLengthInSeconds(note, tempo);\r\n    notePlayer.stop(notePlayer.getCurrentTime() + timeInSeconds);\r\n    notePlayer.onEnded(function() {\r\n      this._freeNotePlayer.bind(this, notePlayer);\r\n      if (onNoteEnd) onNoteEnd();\r\n    }.bind(this));\r\n  }\r\n\r\n  _freeNotePlayer(notePlayer) {\r\n    this.notePlayerPool.returnNotePlayer(notePlayer);\r\n    this._notePlayersInUse.splice(this._notePlayersInUse.indexOf(notePlayer), 1);\r\n  }\r\n\r\n  stop() {\r\n    this._notePlayersInUse.forEach((o) => o.stop());\r\n  }\r\n}\r\n","import AudioPlayer from \"./audioPlayer\";\r\nimport { calculateNoteLengthInSeconds } from \"./utils\";\r\n// import Note from \"./note\";\r\n\r\nexport default class OrderedSongPlayer {\r\n  static state = {\r\n    ready: \"ready\",\r\n    playing: \"playing\",\r\n    paused: \"paused\",\r\n    ended: \"ended\"\r\n  }\r\n\r\n  constructor() {\r\n    this.audioPlayer = new AudioPlayer();\r\n    this.song = []; // TODO: make song a class\r\n    this._scheduledEvents = [];\r\n    this.state = OrderedSongPlayer.state.ready;\r\n    // the time at which play is pressed\r\n    this._startTime = 0;\r\n    // the time of the song when play is pressed\r\n    this._startLocation = 0;\r\n    this.tempo = 120;\r\n  }\r\n\r\n  reset() {\r\n    this._scheduledEvents = [];\r\n    this.state = OrderedSongPlayer.state.ready;\r\n    // the time at which play is pressed\r\n    this._startTime = 0;\r\n    // the time of the song when play is pressed\r\n    this._startLocation = 0;\r\n  }\r\n\r\n  isPlaying() {\r\n    return this.state === OrderedSongPlayer.state.playing;\r\n  }\r\n\r\n  isEnded() {\r\n    return this.state === OrderedSongPlayer.state.ended;\r\n  }\r\n\r\n  setSong(song) {\r\n    this.song = song;\r\n    this.reset();\r\n  }\r\n\r\n  setTempo(tempo) {\r\n    if (tempo == null) return;\r\n    const playing = this.isPlaying();\r\n\r\n    const currentTempo = this.tempo;\r\n    this.tempo = tempo;\r\n\r\n    this.pause();\r\n    // scale current location to new location\r\n    this._startLocation = this._startLocation * currentTempo / tempo;\r\n\r\n    if (playing) {\r\n      this.play();\r\n    }\r\n  }\r\n\r\n  play() {\r\n    if (this.isEnded()) this.state = OrderedSongPlayer.state.ready;\r\n    if (this.song.length === 0 || this.isPlaying() || this.isEnded()) return;\r\n\r\n    this._startTime = Date.now();\r\n\r\n    this.state = OrderedSongPlayer.state.playing;\r\n    let timeElapsedInMillis = 0;\r\n    for (const note of this.song) {\r\n      const noteLengthInMillis = calculateNoteLengthInSeconds(note, this.tempo) * 1000;\r\n\r\n      if (note.noteValue !== 0 && (timeElapsedInMillis + noteLengthInMillis) >= this._startLocation) {\r\n        // TODO CUT THE FIRST ONE SHORT IF IT WAS PAUSED\r\n        // const noteToPlay = this._startLocation > 0 ? new Note(note.noteValue, note.noteLength, note.startTime - calculateTime\r\n        this._scheduledEvents.push(setTimeout(this._playNote.bind(this), timeElapsedInMillis - this._startLocation, note));\r\n      }\r\n\r\n      timeElapsedInMillis += noteLengthInMillis;\r\n    }\r\n  }\r\n\r\n  _playNote(note) {\r\n    this.audioPlayer.play(note, this.tempo, this._onNoteEnd.bind(this, note));\r\n  }\r\n\r\n  _onNoteEnd(note) {\r\n    if (note === this.song[this.song.length - 1]) {\r\n      this.state = OrderedSongPlayer.state.ended;\r\n    }\r\n  }\r\n\r\n  pause() {\r\n    if (this.state !== OrderedSongPlayer.state.playing) return;\r\n    this.state = OrderedSongPlayer.state.paused;\r\n\r\n    const endTime = Date.now();\r\n    this._startLocation = endTime - this._startTime;\r\n\r\n    this._scheduledEvents.forEach((e) => clearTimeout(e));\r\n    this._scheduledEvents = [];\r\n  }\r\n}\r\n","import AudioPlayer from \"./audioPlayer\";\r\nimport { calculateLengthInSeconds } from \"./utils\";\r\n\r\nexport default class SongPlayer {\r\n  static state = {\r\n    ready: \"ready\",\r\n    playing: \"playing\",\r\n    paused: \"paused\",\r\n    ended: \"ended\"\r\n  }\r\n\r\n  constructor() {\r\n    this.audioPlayer = new AudioPlayer();\r\n    this.state = SongPlayer.state.ready;\r\n    this._currentIndex = 0;\r\n    this.tempo = 120;\r\n  }\r\n\r\n  reset() {\r\n    this._scheduledEvents = [];\r\n    this.state = SongPlayer.state.ready;\r\n    this._currentIndex = 0;\r\n  }\r\n\r\n  isReady() {\r\n    return this.state === SongPlayer.state.ready;\r\n  }\r\n\r\n  isPlaying() {\r\n    return this.state === SongPlayer.state.playing;\r\n  }\r\n\r\n  isEnded() {\r\n    return this.state === SongPlayer.state.ended;\r\n  }\r\n\r\n  isPaused() {\r\n    return this.state === SongPlayer.state.paused;\r\n  }\r\n\r\n  setSong(song) {\r\n    this.song = song;\r\n    this._convertSongIntoMap(song);\r\n    this.reset();\r\n  }\r\n\r\n  _convertSongIntoMap(song) {\r\n    const structuredSong = [];\r\n    for (const note of song) {\r\n      let noteGroup = structuredSong.find((n) => n.startTime === note.startTime);\r\n\r\n      if (noteGroup == null) {\r\n        noteGroup = new NoteGroup(note.startTime);\r\n        structuredSong.push(noteGroup);\r\n      }\r\n\r\n      noteGroup.notes.push(note);\r\n    }\r\n\r\n    structuredSong.sort((a, b) => a.startTime - b.startTime);\r\n    this.structuredSong = structuredSong;\r\n  }\r\n\r\n  setTempo(tempo) {\r\n    if (tempo == null || this.isPlaying()) return;\r\n    this.tempo = tempo;\r\n  }\r\n\r\n  play() {\r\n    if (this.isEnded()) {\r\n      this.state = SongPlayer.state.playing;\r\n      this._currentIndex = 0;\r\n    } else if (this.isReady() || this.isPaused()) {\r\n      this.state = SongPlayer.state.playing;\r\n    } else if (this.structuredSong.length === 0) return;\r\n\r\n    this.playImpl();\r\n  }\r\n\r\n  playImpl() {\r\n    if (this.isPaused()) return;\r\n    const noteGroup = this.structuredSong[this._currentIndex];\r\n    for (const note of noteGroup.notes) {\r\n      this._playNote(note);\r\n    }\r\n\r\n    this._currentIndex++;\r\n    if (this.structuredSong.length !== this._currentIndex) {\r\n      const noteLengthUntilNextNote = this.structuredSong[this._currentIndex].startTime - noteGroup.startTime;\r\n      const noteLengthInMillis = calculateLengthInSeconds(noteLengthUntilNextNote, this.tempo) * 1000;\r\n      setTimeout(this.playImpl.bind(this), noteLengthInMillis);\r\n    }\r\n  }\r\n\r\n  _playNote(note) {\r\n    this.audioPlayer.play(note, this.tempo, this._onNoteEnd.bind(this, note));\r\n  }\r\n\r\n  _onNoteEnd(note) {\r\n    const lastNote = this.structuredSong[this.structuredSong.length - 1].notes.reduce((a, b) => Math.max(a.noteLength, b.noteLength));\r\n    if (note === lastNote) {\r\n      this.state = SongPlayer.state.ended;\r\n    }\r\n  }\r\n\r\n  pause() {\r\n    if (this.state !== SongPlayer.state.playing) return;\r\n    this.state = SongPlayer.state.paused;\r\n    this._currentIndex--;\r\n  }\r\n}\r\n\r\n\r\nclass NoteGroup {\r\n  constructor(startTime) {\r\n    this.startTime = startTime;\r\n    this.notes = [];\r\n  }\r\n}\r\n","export default class Note {\r\n  static _frequencyStep = Math.pow(2, 1/12);\r\n  static _baseFrequency = 440;\r\n  static _baseNoteValue = 58;\r\n\r\n  // Note value is described down below\r\n  // Note length is a number describing the duration of the note in quarter notes. Ie a quarter note is 1, half note is 2, eighth note is 0.5\r\n  constructor(noteValue, noteLength, startTime) {\r\n    this.noteValue = noteValue;\r\n    this.noteLength = noteLength;\r\n    this.startTime = startTime;\r\n  }\r\n\r\n  getFrequency() {\r\n    return Note._baseFrequency * Math.pow(Note._frequencyStep, this.noteValue - Note._baseNoteValue);\r\n  }\r\n}\r\n\r\n// Note value is defined as a numerical assignment to a note depending on it's frequency.\r\n// ie C0 is 1, and A4 (440) is 58.\r\n// Each half step is an increment. Just like old times.\r\n\r\n// To calculate frequency, the formula is f1 = f0 * (2^(1/12))^n\r\n// Where f0 is a base frequency and n is the number of half steps away.\r\n// Given this info and that 440 is home base, we can compute frequency using this formula.\r\n","import React from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport OrderedSongPlayer from \"../modules/orderedSongPlayer\";\r\nimport SongPlayer from \"../modules/songPlayer\";\r\nimport Note from \"../modules/note\";\r\n\r\nexport default class PlaySong extends React.Component {\r\n  constructor() {\r\n    super();\r\n    // this.songPlayer = new OrderedSongPlayer();\r\n    // this.songPlayer1 = new OrderedSongPlayer();\r\n\r\n    this.songPlayer = new SongPlayer();\r\n    const mySong1 = mySong.map((n) => new Note(n.noteValue + 12, n.noteLength, n.startTime));\r\n    this.songPlayer.setSong(mySong1);\r\n    // mySong1.map((a) => console.log(a.startTime));\r\n    // this.songPlayer.setSong(mySong);\r\n    // this.songPlayer1.setSong(mySong1);\r\n    // this.songPlayer.setSong([new Note(53, 4)]);\r\n    this.songPlayer.setTempo(120);\r\n    // this.songPlayer1.setTempo(120);\r\n  }\r\n\r\n  startAudio() {\r\n    this.songPlayer.play();\r\n    // this.songPlayer1.play();\r\n  }\r\n\r\n  stopAudio() {\r\n    this.songPlayer.pause();\r\n    // this.songPlayer1.pause();\r\n  }\r\n\r\n  render() {\r\n    return <div>HI\r\n\r\n      <Button onClick={this.startAudio.bind(this)}>play</Button>\r\n      <Button onClick={this.stopAudio.bind(this)}>pause</Button>\r\n    </div>;\r\n  }\r\n}\r\n\r\nconst mySong = [\r\n  // phrase 1\r\n  new Note(53, 1, 0),\r\n  new Note(61, 1.5, 1),\r\n  new Note(60, 0.5, 2.5),\r\n  new Note(58, 0.5, 3),\r\n  new Note(53, 0.5, 3.5),\r\n  new Note(58, 1.5, 4),\r\n  new Note(53, 1.5, 5.5),\r\n  new Note(46, 1, 7),\r\n  new Note(51, 1.5, 8),\r\n  new Note(54, 1, 9.5),\r\n  new Note(51, 0.5, 10.5),\r\n  new Note(54, 0.5, 11),\r\n  new Note(49, 0.5, 11.5),\r\n  new Note(48, 2.5, 12),\r\n  // phrase 1 accompaniment\r\n  new Note(34, 4, 0),\r\n  new Note(41, 4, 0),\r\n  new Note(37, 4, 4),\r\n  new Note(42, 4, 4),\r\n  new Note(39, 4, 8),\r\n  new Note(46, 4, 8),\r\n  new Note(32, 4, 12),\r\n  new Note(39, 4, 12),\r\n  // phrase 2\r\n  new Note(46, 0.5, 14.5),\r\n  new Note(51, 0.5, 15),\r\n  new Note(58, 0.5, 15.5),\r\n  new Note(53, 1, 16),\r\n  new Note(61, 1.5, 17),\r\n  new Note(68, 0.5, 18.5),\r\n  new Note(70, 0.5, 19),\r\n  new Note(61, 0.5, 19.5),\r\n  new Note(66, 1.5, 20),\r\n  new Note(65, 1.5, 21.5),\r\n  new Note(58, 0.5, 23),\r\n  new Note(49, 0.5, 23.5),\r\n  new Note(51, 1.5, 24),\r\n  new Note(53, 1, 25.5),\r\n  new Note(49, 0.5, 26.5),\r\n  new Note(48, 0.5, 27),\r\n  new Note(44, 0.5, 27.5),\r\n  new Note(46, 1.5, 28),\r\n  new Note(44, 2, 29.5),\r\n  new Note(42, 0.25, 31.5),\r\n  new Note(41, 0.25, 31.75),\r\n  // phrase 2 accompaniment\r\n  new Note(34, 4, 16),\r\n  new Note(41, 4, 16),\r\n  new Note(37, 4, 20),\r\n  new Note(42, 4, 20),\r\n  new Note(39, 4, 24),\r\n  new Note(46, 4, 24),\r\n  new Note(32, 4, 28),\r\n  new Note(39, 4, 28),\r\n  // Violin phrase 2\r\n  new Note(61, 1, 13.5),\r\n  new Note(63, 0.25, 14.5),\r\n  new Note(65, 0.25, 14.75),\r\n  new Note(66, 0.25, 15),\r\n  new Note(68, 0.25, 15.25),\r\n  new Note(70, 0.25, 15.5),\r\n  new Note(72, 0.25, 15.75),\r\n  new Note(70, 4, 16),\r\n  new Note(73, 4, 16),\r\n  new Note(73, 4, 20),\r\n  new Note(77, 4, 20),\r\n  new Note(70, 4, 24),\r\n  new Note(75, 4, 24),\r\n  new Note(63, 4, 28),\r\n  new Note(68, 4, 28),\r\n  // phrase 3\r\n  new Note(49, 0.5, 32.5),\r\n  new Note(51, 0.5, 33),\r\n  new Note(53, 0.5, 33.5),\r\n  new Note(54, 0.5, 34),\r\n  new Note(56, 0.5, 34.5),\r\n  new Note(58, 0.5, 35),\r\n  new Note(56, 0.5, 35.5),\r\n  new Note(48, 0.5, 36.5),\r\n  new Note(49, 0.5, 37),\r\n  new Note(51, 0.5, 37.5),\r\n  new Note(53, 0.5, 38),\r\n  new Note(54, 0.5, 38.5),\r\n  new Note(56, 0.5, 39),\r\n  new Note(54, 0.5, 39.5),\r\n  new Note(56, 0.5, 40.5),\r\n  new Note(54, 0.5, 41),\r\n  new Note(56, 0.5, 41.5),\r\n  new Note(58, 0.5, 42),\r\n  new Note(60, 0.5, 42.5),\r\n  new Note(61, 0.25, 43),\r\n  new Note(63, 0.25, 43.25),\r\n  new Note(65, 0.5, 43.5),\r\n  new Note(58, 0.5, 44),\r\n  new Note(63, 0.5, 44.5),\r\n  new Note(61, 0.5, 45),\r\n  new Note(66, 0.5, 45.5),\r\n  new Note(65, 0.5, 46),\r\n  new Note(70, 0.5, 46.5),\r\n  new Note(72, 0.5, 47),\r\n  new Note(73, 0.5, 47.5),\r\n  // phrase 3 accompaniment\r\n  new Note(34, 1.5, 32),\r\n  new Note(34, 1.5, 33.5),\r\n  new Note(34, 1, 35),\r\n  new Note(41, 1.5, 32),\r\n  new Note(41, 1.5, 33.5),\r\n  new Note(41, 1, 35),\r\n  new Note(42, 1.5, 36),\r\n  new Note(42, 1.5, 37.5),\r\n  new Note(42, 1, 39),\r\n  new Note(49, 1.5, 36),\r\n  new Note(49, 1.5, 37.5),\r\n  new Note(49, 1, 39),\r\n  new Note(39, 1.5, 40),\r\n  new Note(39, 1.5, 41.5),\r\n  new Note(39, 1, 43),\r\n  new Note(46, 1.5, 40),\r\n  new Note(46, 1.5, 41.5),\r\n  new Note(46, 1, 43),\r\n  new Note(51, 1.5, 40),\r\n  new Note(51, 1.5, 41.5),\r\n  new Note(51, 1, 43),\r\n  new Note(39, 1.5, 44),\r\n  new Note(39, 1.5, 45.5),\r\n  new Note(39, 1, 47),\r\n  new Note(48, 1.5, 44),\r\n  new Note(48, 1.5, 45.5),\r\n  new Note(48, 1, 47),\r\n  new Note(51, 1.5, 44),\r\n  new Note(51, 1.5, 45.5),\r\n  new Note(51, 1, 47),\r\n  // phrase 3 violin\r\n  new Note(70, 4, 32),\r\n  new Note(73, 4, 32),\r\n  new Note(73, 4, 36),\r\n  new Note(77, 4, 36),\r\n  new Note(70, 4, 40),\r\n  new Note(75, 4, 40),\r\n  new Note(63, 4, 44),\r\n  new Note(68, 4, 44),\r\n  // phrase 4\r\n  new Note(61, 0.5, 49.5),\r\n  new Note(65, 1, 50),\r\n  new Note(70, 1, 51),\r\n  \r\n  new Note(58, 0.5, 53.5),\r\n  new Note(61, 1, 54),\r\n  new Note(65, 1, 55),\r\n  \r\n  new Note(65, 0.5, 57.5),\r\n  new Note(68, 1, 58),\r\n  new Note(73, 1, 59),\r\n  \r\n  new Note(73, 0.5, 61.5),\r\n  new Note(72, 1, 62),\r\n  new Note(68, 3, 63),\r\n  // accompaniment\r\n  new Note(46, 4, 48),\r\n  new Note(58, 4, 48),\r\n  new Note(42, 4, 52),\r\n  new Note(61, 4, 52),\r\n  new Note(49, 4, 56),\r\n  new Note(70, 4, 56),\r\n  new Note(44, 4, 60),\r\n  new Note(68, 4, 60),\r\n];\r\n\r\n/*\r\ne = 53\r\nf = 54\r\ng = 56\r\na = 58\r\nb = 60\r\nc = 61\r\nd = 63\r\n\r\n\r\n*/\r\n","import React from \"react\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport PlaySong from \"./components/PlaySong\";\n\nfunction App() {\n  return (\n    <HashRouter basename=\"/\">\n      <div className=\"App\">\n        <Route exact path=\"/\" component={PlaySong} />\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default App;\n\n\n/*\n  - automagic volume adjutment based on pitch and number of oscillators playing\n  - OG harmonia\n  - random note harmonia\n  - running average harmonia\n  - keyboard harmonia\n  - DNA harmonia\n  - tone.js\n*/\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}